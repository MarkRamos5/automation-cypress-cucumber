import { Given, When, Then } from "cypress-cucumber-preprocessor/steps";

var credentials;
const newUserName = "newautomationuser"
var id = Math.floor(Math.random() * 99999);
var signUpUser = newUserName + id;

Given ("go to home page", () => {
    // Go to the home page
    cy.visit("https://www.demoblaze.com/");
    // Check URL
    cy.url().should('eq', 'https://www.demoblaze.com/');        
});

Given ("return to home page", () => {
    // Go to the home page
    cy.visit("https://www.demoblaze.com/");
    // Check URL
    cy.url().should('eq', 'https://www.demoblaze.com/');        
});

When ("New user signup", () => {
    // Open signin modal
    cy.get('#signin2').click();
    cy.get('#signInModal').should('be.visible');
    // Creating the new user with random ID
    cy.fixture('user-credentials.json').then(function(cred){
        credentials = cred;
        cy.get('#sign-username').should('be.visible').clear().type(signUpUser + '@automation.test');
        cy.get('#sign-password').should('be.visible').clear().type(cred.password);  
    });
    // Click in sign in button
    cy.get('#signInModal > .modal-dialog > .modal-content > .modal-footer > .btn-primary')
        .should('be.visible')
        .should('contain', 'Sign up')
        .click();
    
    
    // Check new user is created, save and display in console log the random password generated
    // and check the user was created with the correct data
    cy.fixture('user-credentials.json').then(function(cred){
        // Intercept /login
        cy.intercept('POST', '/signup').as('signup')
        cy.wait('@signup').then((interception) => {
            // Variable to save the random password
            var randomPassword;
            // Credentials
            credentials = cred;
            // Save the random password generated by the page
            randomPassword = interception.request.body.password;
            // Combine new user with the id
            var signUpUser = newUserName + id;
            // Displays the Random password
            console.log('Random Password: ' + randomPassword);
            // Check status 200
            expect(interception.response.statusCode).to.eq(200);
            // Check username is the username generated
            expect(interception.request.body.username).to.eq(signUpUser + '@automation.test');
            // Check password
            expect(interception.request.body.password).to.equal(randomPassword);
            });
    });
});

When ("Login with the new user", () => {
    // Open login modal
    cy.get('#login2').should('be.visible').click();
    // Login with the credentials created
    cy.fixture('user-credentials.json').then(function(cred){
        credentials = cred;
        cy.get('#loginusername').should('be.visible').clear().type(signUpUser + '@automation.test');
        cy.get('#loginpassword').should('be.visible').clear().type(cred.password);  
    });
    // Click in login button
    cy.get('#logInModal > .modal-dialog > .modal-content > .modal-footer > .btn-primary')
    .should('be.visible')
    .click();
});

Then ("Successfull login with new user", () => {
    // Intercept /login to check successful login and username is the one created in the test
    // (having the signUpUser makes easier the deletion of user if needed)    
    cy.fixture('user-credentials.json').then(function(cred){
        credentials = cred;
        // Intercept /login
        cy.intercept('POST', '/login').as('login')
        cy.wait('@login').then((interception) => {
            // Check login was successful
            expect(interception.response.statusCode).to.eq(200)
            // Check username (in the response we still having the random password, thats why I do not check the password)
            expect(interception.request.body.username).to.eq(signUpUser + '@automation.test')
        });
    });
});

When ("User logout", () => {
    // Click in logout button
    cy.get('#logout2').should('be.visible').click();
});

Then ("User logout successful", () => {
    // Check successful logout
    cy.get('#signin2').should('be.visible');
    cy.get('#logout2').should('not.be.visible')
    cy.get('#nameofuser').should('not.be.visible');
    // Check URL after logout
    cy.url().should('eq', 'https://www.demoblaze.com/index.html');        
});



